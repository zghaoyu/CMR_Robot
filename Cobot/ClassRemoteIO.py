import threading
import time
import LogHelper as LogObj
from ClassSocket import ComSocket

#Singleton class
class RemoteIO(object):
    _instance_lock = threading.Lock()
    _home_dir = 'E:/CobotHome/RemoteIO'
    _ip = "192.168.1.200"
    _port = 4200
    _sck = ComSocket()

    _channelsOn = {1: [0x01,0x05,0x00,0x10,0xFF,0x00,0x8D,0xFF],
                   2: [0x01,0x05,0x00,0x11,0xFF,0x00,0xDC,0x3F],
                   3: [0x01,0x05,0x00,0x12,0xFF,0x00,0x2C,0x3F],
                   4: [0x01,0x05,0x00,0x13,0xFF,0x00,0x7D,0xFF],
                   5: [0x01,0x05,0x00,0x14,0xFF,0x00,0xCC,0x3E],
                   6: [0x01,0x05,0x00,0x15,0xFF,0x00,0x9D,0xFE],
                   7: [0x01,0x05,0x00,0x16,0xFF,0x00,0x6D,0xFE],
                   8: [0x01,0x05,0x00,0x17,0xFF,0x00,0x3C,0x3E]}

    _channelsOff = {1: [0x01,0x05,0x00,0x10,0x00,0x00,0xCC,0x0F],
                    2: [0x01,0x05,0x00,0x11,0x00,0x00,0x9D,0xCF],
                    3: [0x01,0x05,0x00,0x12,0x00,0x00,0x6D,0xCF],
                    4: [0x01,0x05,0x00,0x13,0x00,0x00,0x3C,0x0F],
                    5: [0x01,0x05,0x00,0x14,0x00,0x00,0x8D,0xCE],
                    6: [0x01,0x05,0x00,0x15,0x00,0x00,0xDC,0x0E],
                    7: [0x01,0x05,0x00,0x16,0x00,0x00,0x2C,0x0E],
                    8: [0x01,0x05,0x00,0x17,0x00,0x00,0x7D,0xCE]}

    def __init__(self, *args, **kwargs):
        with RemoteIO._instance_lock:
            pass

    def __new__(cls, *args, **kwargs):
        with RemoteIO._instance_lock:
            if not hasattr(cls, '_instance'):
                if not hasattr(cls, '_instance'):
                    RemoteIO._instance = super().__new__(cls)
            return RemoteIO._instance

    def set_output(self, bOn=True, iChannel=1):
        bOK = False
        if iChannel < 1 or iChannel > 8: return True
        try:
            if self._sck.connect(self._ip, self._port):
                if bOn:
                    bOK, rtn = self._sck.send(self._channelsOn[iChannel], True)
                else:
                    bOK, rtn = self._sck.send(self._channelsOff[iChannel], True)
                    time.sleep(0.5)
            self._sck.disconnect()
        except Exception as e:
            LogObj.logSystemError()
        return bOK